<project name="chionographis" default="classes">

  <target name="release" depends="classes,api-docs,users-guide">
    <zip destfile="release/doc/api.zip" basedir="release/doc/api" level="9"/>
    <delete dir="release/classes"/>
    <delete dir="release/doc/api"/>
  </target>

  <target name="classes" depends="-compile,-archive"/>

  <target name="-compile">
    <delete dir="release/classes"/>
    <mkdir dir="release/classes"/>
    <javac srcdir="src" includes="net/furfurylic/chionographis/**/*.java"
      destdir="release/classes" nowarn="yes" source="1.8" debug="yes"
      debuglevel="source,lines" includeantruntime="yes"/>
  </target>

  <target name="-archive" depends="-rev">
    <delete dir="release/lib"/>
    <mkdir dir="release/lib"/>
    <script language="javascript"><![CDATA[
      manifest = new org.apache.tools.ant.taskdefs.Manifest();
      manifest.addConfiguredAttribute(new org.apache.tools.ant.taskdefs.Manifest.Attribute(
        "Sealed", "true"));
      manifest.addConfiguredAttribute(new org.apache.tools.ant.taskdefs.Manifest.Attribute(
        "Specification-Title", "Chionographis"));
      manifest.addConfiguredAttribute(new org.apache.tools.ant.taskdefs.Manifest.Attribute(
        "Implementation-Title", "net.furfurylic.chionographis"));
      manifest.addConfiguredAttribute(new org.apache.tools.ant.taskdefs.Manifest.Attribute(
        "Main-Class", "net.furfurylic.chionographis.Main"));

      number = project.getProperty("rev.number");
      spec = project.getProperty("rev.spec");
      if (spec != null) {
        manifest.addConfiguredAttribute(new org.apache.tools.ant.taskdefs.Manifest.Attribute(
          "Specification-Version", spec));
      }
      if (number != null) {
        manifest.addConfiguredAttribute(new org.apache.tools.ant.taskdefs.Manifest.Attribute(
          "Implementation-Version", number));
      }

      jar = project.createTask("jar");
      jar.setDestFile(new java.io.File(project.getBaseDir(), "release/lib/chionographis.jar"));
      jar.setBasedir(new java.io.File(project.getBaseDir(), "release/classes"));
      jar.setIncludes("**/*");
      jar.setUpdate(false);
      jar.setFilesonly(true);
      jar.setIndex(true);
      jar.setLevel(9);
      jar.addConfiguredManifest(manifest);
      jar.perform();
    ]]></script>
  </target>

  <target name="api-docs" depends="-rev">
    <delete dir="release/doc/api"/>
    <mkdir dir="release/doc/api"/>
    <script language="javascript"><![CDATA[
      javadoc = project.createTask("javadoc");
      javadoc.setLocale("en");
      javadoc.setPackagenames("net.furfurylic.chionographis.*");
      javadoc.setSourcepath(new org.apache.tools.ant.types.Path(project, "src"));
      javadoc.setDestdir(new java.io.File(project.getBaseDir(), "release/doc/api"));
      javadoc.setEncoding("UTF-8");
      javadoc.setDocencoding("UTF-8");
      javadoc.setCharset("UTF-8");
      javadoc.setClasspath(new org.apache.tools.ant.types.Path(
        project, project.getProperty("ant.home") + "/lib/ant.jar"));

      number = project.getProperty("rev.number");
      spec = project.getProperty("rev.spec");
      if (spec != null) {
        javadoc.setWindowtitle("Chionographis API version " + spec + " (" + number + ")");
        javadoc.setDoctitle("Chionographis API v" + spec);
        javadoc.setHeader("Chionographis API v" + spec);
      } else {
        if (number != null) {
          javadoc.setWindowtitle("Chionographis API (version " + number + ")");
        } else {
          javadoc.setWindowtitle("Chionographis API");
        }
        javadoc.setDoctitle("Chionographis API");
        javadoc.setHeader("Chionographis API");
      }
      javadoc.perform();
    ]]></script>
  </target>

  <target name="-rev" depends="-git-check,-rev-git"/>
  <target name="rev" depends="-git-check,-rev-git"/>

  <target name="-git-check">
    <exec executable="git" resultproperty="git.exitcode"
      failonerror="false" failifexecutionfails="false">
      <arg line="status"/>
      <arg line="-s"/>
    </exec>
    <condition property="git.available" else="false">
      <equals arg1="${git.exitcode}" arg2="0"/>
    </condition>
  </target>

  <target name="-rev-git" if="${git.available}">
    <exec executable="git" outputproperty="git.desc.tags">
      <arg line="describe" />
      <arg line="--tags" />
    </exec>
    <exec executable="git" outputproperty="git.log.date">
      <arg line="log"/>
      <arg line="-1"/>
      <arg line="--date=iso"/>
      <arg line="--format='%cd'"/>
     </exec>
    <script language="javascript"><![CDATA[
      number = project.getProperty("git.desc.tags").replaceAll("^[\\s]*v([\\S]+)[\\s]*$", "$1");
      base = number.replaceAll("^[\\s]*([\\d]+\\.[\\d]+\\.[\\d]+).*$", "$1");
      project.setNewProperty("rev.number", number);
      project.setNewProperty("rev.base", base);
      if (number.equals(base)) {
        spec = base.replaceAll("^[\\s]*([\\d]+\\.[\\d]+).*$", "$1");
        project.setNewProperty("rev.spec", spec);
      }
      dateString = project.getProperty("git.log.date").trim();
      date = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ssX").parse(dateString);
      format = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z");
      format.setTimeZone(java.util.TimeZone.getTimeZone("UTC"));
      dateString = format.format(date);
      project.setNewProperty("rev.date", dateString);
    ]]></script>
  </target>

  <target name="users-guide" depends="-rev">
    <mkdir dir="release/doc"/>
    <script language="javascript"><![CDATA[
      exec = project.createTask("exec");
      exec.setExecutable("asciidoc");
      exec.setFailIfExecutionFails(false);
      exec.createArg().setLine("-b html5");
      exec.createArg().setLine("-a toc");
      exec.createArg().setLine("-n");
      exec.createArg().setLine("-o release/doc/UsersGuide.html");
      if (project.getProperty("rev.number") != null) {
        exec.createArg().setLine("-a revnumber=" + project.getProperty("rev.number"));
        exec.createArg().setLine("-a revdate='" + project.getProperty("rev.date") + "'");
      }
      exec.createArg().setLine("UsersGuide.asciidoc");
      exec.perform();
    ]]></script>
  </target>

  <target name="api-docs-devel">
    <delete dir="devel/doc/api"/>
    <mkdir dir="devel/doc/api"/>
    <javadoc locale="en" packagenames="net.furfurylic.chionographis.*"
      sourcepath="src" destdir="devel/doc/api" encoding="UTF-8" docencoding="UTF-8"
      charset="UTF-8" windowtitle="Chionographis API for developers"
      doctitle="Chionographis API for developers"
      header="Chionographis API for developers"
      classpath="${ant.home}/lib/ant.jar" access="package" use="yes"/>
  </target>

</project>
